{"version":3,"sources":["websocket/socket.js","card.js","field.js","controls.js","players.js","room.js","selection.js","App.js","reportWebVitals.js","index.js"],"names":["socket","io","playCard","cardId","rid","update","data","target","value","emit","response","on","Card","handleClick","event","props","uid","onCardPlayed","className","onClick","this","suit","React","Component","Field","hand","last","slice","Math","max","length","card","push","Controls","handleChangeDraw","setState","drawCount","handleChangeDeal","dealCount","handleInitialize","initialize","handleDraw","count","drawCards","state","onDraw","handleDeal","dealCards","type","min","onChange","Players","players","deckSize","Object","entries","sid","player","name","Room","onUpdate","newState","_deck","_field","field","concat","action","uids","map","filter","includes","_deckSize","_players","requestState","Selection","onJoined","joined","handleRidChange","handleNameChange","handleJoin","joinRoom","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.be40789e.chunk.js","sourcesContent":["import { io } from \"socket.io-client\"\n\n// const url = 'ws://0.0.0.0:8080'\nconst url = 'wss://hackillinois-cards.herokuapp.com'\nconst options = {}\n\nexport const socket = io(url, options)\n\nsocket.on('connect', () => {\n  // joinRoom('abcd')\n})\n\nexport function joinRoom(name, rid, update) {\n  const data = { name, rid }\n  socket.emit('join', data, (response) => {\n    update(response)\n  })\n}\n\nexport function requestState(rid, update) {\n  const data = { rid }\n  socket.emit('refresh', data, (response) => {\n    update(response)\n  })\n}\n\nexport function initialize(rid) {\n  const data = { rid }\n  socket.emit('initialize', data)\n}\n\nexport function playCard(cardId, rid, update) {\n  const data = { target: '_field', value: [cardId], rid }\n  socket.emit('play', data, (response) => {\n    update(response)\n  })\n}\n\nexport function drawCards(count, rid, update) {\n  const data = { count, rid }\n  socket.emit('draw', data, (response) => {\n    update(response)\n  })\n}\n\nexport function dealCards(count, rid) {\n  const data = { count, rid }\n  socket.emit('deal', data)\n}\n","import React from 'react'\nimport './card.css'\nimport { playCard } from './websocket/socket.js'\n\nexport default class Card extends React.Component {\n  handleClick = (event) => {\n    playCard(this.props.uid, this.props.rid, this.props.onCardPlayed)\n  }\n\n  render() {\n    return (\n      <div className='card noselect' onClick={this.handleClick}>\n        <div className=\"text\">{this.props.suit}</div>\n        <div className=\"text\">{this.props.value}</div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport Card from './card.js'\nimport './field.css'\n\nexport default class Field extends React.Component {\n  render () {\n    const hand = []\n    const last = this.props.hand.slice(\n      Math.max(this.props.hand.length - 5, 0)\n    )\n    for (const card of last) {\n      hand.push(\n        <Card \n          key={card.uid}\n          {...card}\n          rid={this.props.rid}\n          onCardPlayed={this.onCardPlayed}\n        />\n      )\n    }\n    return (\n      <div className=\"field\">\n        <div className=\"watermark noselect\">FIELD</div>\n        {hand}\n      </div>\n    )\n  }\n  \n}\n","import React from 'react'\nimport { initialize, drawCards, dealCards } from './websocket/socket.js'\nimport './controls.css'\n\nexport default class Controls extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      drawCount: 1,\n      dealCount: 5\n    }\n  }\n\n  handleChangeDraw = (event) => {\n    this.setState({ drawCount: event.target.value })\n  }\n\n  handleChangeDeal = (event) => {\n    this.setState({ dealCount: event.target.value })\n  }\n\n  handleInitialize = (event) => {\n    initialize(this.props.rid)\n  }\n\n  handleDraw = (event) => {\n    drawCards(this.state.drawCount, this.props.rid, this.props.onDraw)\n  }\n\n  handleDeal = (event) => {\n    dealCards(this.state.dealCount, this.props.rid)\n  }\n\n  render() {\n    return (\n      <div className=\"controls\">\n        <div className=\"control\">\n          <button onClick={this.handleInitialize}>Start</button>\n        </div>\n        <div className=\"control\">\n          <button onClick={this.handleDraw}>Draw</button>\n          <input\n            type=\"number\" min=\"0\" max=\"52\"\n            value={this.state.drawCount}\n            onChange={this.handleChangeDraw}\n          />\n        </div>\n        <div className=\"control\">\n          <button onClick={this.handleDeal}>Deal</button>\n          <input type=\"number\" min=\"0\" max=\"52\"\n            value={this.state.dealCount}\n            onChange={this.handleChangeDeal}/>\n        </div>\n        <div className=\"info\">Only one player presses start when \n        everyone is ready! That will automatically shuffle the deck. \n        Deal deals to everyone, draw only draws to yourself. Click on a\n        card to play to the field, and the field will show the last \n        5 cards played.</div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport './players.css'\n\nexport default class Players extends React.Component {\n  render() {\n    const players = [(\n      <div className=\"player\" key=\"_deck\">\n        <div className=\"name\">Deck</div>\n        <div className=\"count\">{this.props.deckSize}</div>\n      </div>\n    )]\n    for (const [sid, player] of Object.entries(this.props.players)) {\n      players.push(\n        <div className=\"player\" key={sid}>\n          <div className=\"name\">{player.name}</div>\n          <div className=\"count\">{player.count}</div>\n        </div>\n      )\n    }\n    return (\n      <div className=\"players\">{players}</div>\n    )\n  }\n}\n","import React from 'react'\nimport './room.css'\nimport Field from './field.js'\nimport Card from './card.js'\nimport Controls from './controls.js'\nimport Players from './players.js'\nimport { socket, requestState } from './websocket/socket.js'\n\nexport default class Room extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      _deckSize: 0,\n      _players: {},\n      hand: [],\n      field: []\n    }\n  }\n\n  componentDidMount() {\n    requestState(this.props.rid, this.onUpdate)\n    socket.on('update', (data) => {\n      this.onUpdate(data)\n    })\n  }\n\n  onUpdate = (response) => {\n    // console.log(response)\n    const newState = {\n    }\n    if ('state' in response) {\n      newState['_deckSize'] = response.state._deck\n      delete response.state._deck\n      delete response.state._field\n      delete response.state[this.props.sid]\n      newState['_players'] = response.state\n    }\n\n    if (response.target === '_field') {\n      newState['field'] = this.state.field.concat(response.value)\n    } else if (response.action === 'add') {\n      newState['hand'] = this.state.hand.concat(response.value)\n    } else if (response.action === 'remove') {\n      const uids = response.value.map(card => card.uid);\n      newState['hand'] = this.state.hand.filter((card) => {\n        return !uids.includes(card.uid) \n      })\n    }\n    this.setState(newState)\n  }\n\n  render () {\n    const hand = []\n    for (const card of this.state.hand) {\n      hand.push(\n        <Card \n          key={card.uid}\n          {...card}\n          rid={this.props.rid}\n          onCardPlayed={this.onUpdate}\n        />\n      )\n    }\n\n    return (\n      <div className=\"room\">\n        <Players players={this.state._players} deckSize={this.state._deckSize}/>\n        <Field hand={this.state.field}/>\n        <div className=\"hand\">\n          <div className=\"watermark noselect\">HAND</div>\n          {hand}\n        </div>\n        <Controls \n          rid={this.props.rid} \n          onDraw={this.onUpdate} />\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport Room from './room.js'\nimport { joinRoom } from './websocket/socket.js'\nimport './selection.css'\n\nexport default class Selection extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { rid: '', sid: '', name: '', joined: false }\n  }\n\n  onJoined = (data) => {\n    this.setState({ ...data, joined: true })\n  }\n\n  handleRidChange = (event) => {\n    this.setState({ rid: event.target.value })\n  }\n\n  handleNameChange = (event)=> {\n    this.setState({ name: event.target.value })\n  }\n\n  handleJoin = (event) => {\n    // TODO Change to an input field\n    joinRoom(this.state.name, this.state.rid, this.onJoined)\n  }\n\n  render() {\n    if (this.state.joined) {\n      return (\n        <div>\n          <div>Room {this.state.rid}</div>\n          <Room rid={this.state.rid} sid={this.state.sid}/>\n        </div>\n      )\n    }\n    return (\n      <div className=\"selection\">\n        <div>ROOM CODE</div>\n        <input value={this.state.rid} onChange={this.handleRidChange}/>\n        <br/>\n        <br/>\n        <div>DISPLAY NAME</div>\n        <input value={this.state.name} onChange={this.handleNameChange}/>\n        <br/>\n        <br/>\n        <button onClick={this.handleJoin}>Join</button>\n      </div>\n    )\n  }\n}\n","import './App.css';\n\nimport Selection from './selection.js'\n\nfunction App() {\n  return (\n    <Selection/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { socket } from './websocket/socket.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nconsole.log(socket);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}